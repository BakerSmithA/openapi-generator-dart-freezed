{{^hasDiscriminatorWithNonEmptyMapping}}
factory {{classname}}.fromJson(Map<String, dynamic> json) => _${{classname}}FromJson(json);
{{/hasDiscriminatorWithNonEmptyMapping}}

{{#hasDiscriminatorWithNonEmptyMapping}}
    factory {{classname}}.fromJson(Map<String, dynamic> json) {
        {{#discriminator}}
        switch(json['{{propertyBaseName}}']){
            {{#mappedModels}}
                case '{{mappingName}}':
                    return {{classname}}.{{#lambda.camelcase}}{{mappingName}}{{/lambda.camelcase}}(
                        {{#lambda.camelcase}}{{modelName}}{{/lambda.camelcase}} : {{modelName}}.fromJson(json),
                    );
            {{/mappedModels}}
        }
        {{/discriminator}}
        return {{classname}}.unknown();
    }
{{/hasDiscriminatorWithNonEmptyMapping}}