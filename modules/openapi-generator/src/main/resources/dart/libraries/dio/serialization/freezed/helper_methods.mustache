{{^vendorExtensions.x-is-pure}}
    {{#hasDiscriminatorWithNonEmptyMapping}}
        extension {{classname}}Helper on {{classname}} {
            {{#vendorExtensions.x-oneOf-helper-properties}}
                {{#oneOfVars}}
                    {{#description}}
                        /// [{{name}}] - {{{.}}}
                    {{/description}}
                {{/oneOfVars}}
                {{! The mapping name here matches that from class_factory }}
                static {{classname}} {{#lambda.camelcase}}{{mappingName}}{{/lambda.camelcase}}({
                    {{#oneOfVars}}
                        {{#description}}
                            /// {{{.}}}
                        {{/description}}
                        {{>serialization/freezed/variable_type}} {{name}},
                    {{/oneOfVars}}
                }) {
                    return {{classname}}.{{#lambda.camelcase}}{{mappingName}}{{/lambda.camelcase}}(
                        {{modelName}}(
                            {{! 
                            If discriminatorEnumValue has been automatically inferred,
                            the user doesn't need to provide it in the arguments and
                            it will be added automatically here.
                            }}
                            {{#discriminatorEnumValue}}
                                {{discriminatorEnumKey}}: {{discriminatorEnumValue}},
                            {{/discriminatorEnumValue}}
                            {{#oneOfVars}}
                            {{name}}: {{name}},
                            {{/oneOfVars}}
                        )
                    );
                }
            {{/vendorExtensions.x-oneOf-helper-properties}}
        }
    {{/hasDiscriminatorWithNonEmptyMapping}}
{{/vendorExtensions.x-is-pure}}
